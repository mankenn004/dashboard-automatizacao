Variavel = igual uma caixa
print com " = pedir pra ele escrever algo

print sem " é uma caixa e quer ver oq tem dentro

O comando input() faz duas coisas:

Mostra uma mensagem na tela para o usuário.

Fica parado, esperando o usuário digitar algo e apertar Enter.
=====================================================================
Para comparar se duas coisas são iguais em Python, nós usamos dois sinais de igual (==).

= (um sinal de igual) é usado para guardar um valor numa variável.

== (dois sinais de igual) é usado para comparar se dois valores são iguais.
====================================================================
Melhorando o Jogo com Dicas (elif)
O elif nos permite testar uma nova condição caso a condição do if seja falsa. A lógica fica assim:

if: Teste se o jogador acertou.

elif: Se ele não acertou, senão se o palpite foi maior que o número secreto.

else: Se nenhuma das anteriores for verdade (ou seja, ele não acertou e nem chutou um número maior), então a única opção que sobra é que ele chutou um número menor.

==============================================================
O comando random.randint(1, 20) simplesmente sorteia um número inteiro entre 1 e 20.

=====================================================================

A Solução: Laços de Repetição (while)
Então, como resolvemos isso? Como fazemos o jogo dar várias chances, usando o mesmo número secreto, até o jogador acertar?

A resposta é uma das ferramentas mais poderosas e importantes da programação: os laços de repetição, ou loops.

Nós vamos usar o loop while (enquanto). A lógica dele é:

"Enquanto uma condição for verdadeira, continue repetindo o bloco de código que está dentro de mim."

A condição que queremos para o nosso jogo continuar rodando é: "enquanto o palpite for diferente do número secreto".

O símbolo para "diferente" em Python é !=.
==========================================================
Aprendeu sobre print() para mostrar informações.

Aprendeu sobre variáveis para guardar informações.

Aprendeu sobre input() para receber informações.

Aprendeu sobre if, elif e else para tomar decisões.

Aprendeu sobre while para repetir ações.

Aprendeu a usar uma biblioteca (random) para adicionar superpoderes ao seu código.

E o mais importante: você encontrou um erro (IndentationError), entendeu a mensagem e conseguiu consertar o problema.